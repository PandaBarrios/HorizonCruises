@model HorizonCruises.Application.DTOs.BarcoDTO

@{
    ViewData["Title"] = "Crear Barco";
    var habitacionesList = ViewBag.Habitaciones as SelectList;
}

<h1 class="text-center my-4">Crear Barco</h1>
<hr />

<div class="container">
    <form asp-action="Create" method="post">
        <div asp-validation-summary="All" class="text-danger mb-3"></div>

        <!-- Nombre -->
        <div class="form-group mb-3">
            <label asp-for="Nombre" class="form-label"></label>
            <input asp-for="Nombre" class="form-control" />
            <span asp-validation-for="Nombre" class="text-danger"></span>
        </div>

        <!-- Descripción -->
        <div class="form-group mb-3">
            <label asp-for="Descripcion" class="form-label"></label>
            <input asp-for="Descripcion" class="form-control" />
            <span asp-validation-for="Descripcion" class="text-danger"></span>
        </div>

        <!-- Capacidad de Huespedes -->
        <div class="form-group mb-3">
            <label asp-for="CapacidadHuespedes" class="form-label"></label>
            <input asp-for="CapacidadHuespedes" class="form-control" />
            <span asp-validation-for="CapacidadHuespedes" class="text-danger"></span>
        </div>

        <!-- Habitaciones -->
        <h4 class="mt-4">Habitaciones</h4>
        <button type="button" class="btn btn-success btn-sm mb-3" onclick="agregarHabitacion()">Agregar Habitación</button>
        <div id="habitacionesList"></div>

        <!-- Botón Guardar -->
        <div class="text-center mt-4">
            <input type="submit" value="Crear Barco" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-secondary ms-2">Volver a la lista</a>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        let index = 0;

        // Lista completa de habitaciones desde el servidor
        const habitacionesDisponibles = [
        @foreach (var hab in habitacionesList)
        {
            <text>{ value: "@hab.Value", text: "@hab.Text" },</text>
        }
        ];

        function agregarHabitacion() {
            const container = document.getElementById("habitacionesList");

            // Obtener valores de habitaciones ya seleccionadas
            const selects = document.querySelectorAll(".habitacion-select");
            const seleccionadas = Array.from(selects).map(s => s.value);

            // Filtrar las habitaciones aún disponibles
            const disponibles = habitacionesDisponibles.filter(h => !seleccionadas.includes(h.value));

            if (disponibles.length === 0) {
                alert("Ya no hay más habitaciones disponibles para agregar.");
                return;
            }

            const div = document.createElement("div");
            div.classList.add("row", "mb-2", "align-items-end");

            let opciones = `<option value="">Seleccione una habitación</option>`;
            disponibles.forEach(h => {
                opciones += `<option value="${h.value}">${h.text}</option>`;
            });

            div.innerHTML = `
                <div class="col-md-6">
                    <select class="form-select habitacion-select" name="BarcoHabitaciones[${index}].IdHabitacion" required>
                        ${opciones}
                    </select>
                </div>
                <div class="col-md-4">
                    <input type="number" name="BarcoHabitaciones[${index}].TotalHabitacionesDisponibles" class="form-control" placeholder="Total disponibles" min="1" required />
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-danger" onclick="eliminarHabitacion(this)">X</button>
                </div>
            `;

            container.appendChild(div);
            index++;
        }

        // Eliminar fila de habitación y permitir volver a seleccionar esa opción
        function eliminarHabitacion(btn) {
            btn.closest('.row').remove();
        }

        // Validación antes de enviar el formulario
        document.querySelector("form").addEventListener("submit", function (e) {
            const selects = document.querySelectorAll(".habitacion-select");
            const values = [];

            for (let select of selects) {
                const value = select.value;
                if (values.includes(value)) {
                    e.preventDefault();
                    alert("No puedes seleccionar la misma habitación más de una vez.");
                    return false;
                }
                if (value) {
                    values.push(value);
                }
            }
        });
    </script>
}
