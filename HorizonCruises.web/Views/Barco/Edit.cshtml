@model HorizonCruises.Application.DTOs.BarcoDTO

@{
    ViewData["Title"] = "Editar Barco";
}

<h1 class="text-center my-4">Editar Barco</h1>

<h4 class="text-center mb-4">Detalles del Barco</h4>
<hr />

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <input type="hidden" asp-for="Id" />

                <!-- Nombre del Barco -->
                <div class="form-group mb-3">
                    <label asp-for="Nombre" class="control-label"></label>
                    <input asp-for="Nombre" class="form-control" placeholder="Nombre del barco" />
                    <span asp-validation-for="Nombre" class="text-danger"></span>
                </div>

                <!-- Descripción del Barco -->
                <div class="form-group mb-3">
                    <label asp-for="Descripcion" class="control-label"></label>
                    <input asp-for="Descripcion" class="form-control" placeholder="Descripción del barco" />
                    <span asp-validation-for="Descripcion" class="text-danger"></span>
                </div>

                <!-- Capacidad de Huespedes -->
                <div class="form-group mb-3">
                    <label asp-for="CapacidadHuespedes" class="control-label"></label>
                    <input asp-for="CapacidadHuespedes" class="form-control" placeholder="Capacidad de huespedes" />
                    <span asp-validation-for="CapacidadHuespedes" class="text-danger"></span>
                </div>

                <h4 class="mt-4 mb-3">Habitaciones</h4>
                <div id="habitacionesContainer">
                    <!-- Sección donde se agregarán las habitaciones seleccionadas -->
                    <button type="button" class="btn btn-success mb-3" onclick="agregarHabitacion()">Agregar Habitación</button>

                    <!-- Aquí se renderiza la lista de habitaciones seleccionadas -->
                    <div id="habitacionesList">
                        @if (ViewBag.HabitacionesAsignadas != null)
                        {
                            foreach (var habitacion in ViewBag.HabitacionesAsignadas)
                            {
                                <div class="habitacion-item">
                                    <div class="form-group mb-3">
                                        <label>Selecciona una habitación</label>
                                        <select name="BarcoHabitaciones[0].IdHabitacion" class="form-control">
                                            @foreach (var h in ViewBag.Habitaciones)
                                            {
                                                if (habitacion.IdHabitacion == h.Id)
                                                {
                                                    <option value="@h.Id" selected>@h.Nombre</option>
                                                }
                                                else
                                                {
                                                    <option value="@h.Id">@h.Nombre</option>
                                                }
                                            }
                                        </select>

                                        <label>Cantidad disponible</label>
                                        <input type="number"
                                               name="BarcoHabitaciones[0].TotalHabitacionesDisponibles"
                                               value="@habitacion.TotalHabitacionesDisponibles"
                                               class="form-control mt-2"
                                               placeholder="Cantidad disponible" />

                                        <button type="button" class="btn btn-danger mt-2" onclick="eliminarHabitacion(this)">Eliminar</button>
                                    </div>
                                </div>
                            }
                        }
                    </div>



                </div>

                <div class="form-group text-center">
                    <input type="submit" value="Guardar Cambios" class="btn btn-primary btn-lg" />
                </div>

                <input type="hidden" id="habitacionesJson" name="habitacionesJson" />

            </form>
        </div>
    </div>
</div>

<div class="text-center mt-4">
    <a asp-action="IndexAdmin" class="btn btn-secondary btn-lg">Volver a la lista</a>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    // Función para agregar una habitación seleccionada
    function agregarHabitacion() {
        let container = document.getElementById("habitacionesList");

        // Crea un contenedor para la nueva selección de habitación
        let div = document.createElement("div");
        div.classList.add("habitacion-item");

        // Usamos el ViewBag para renderizar las habitaciones disponibles en un select
        div.innerHTML = `
            <div class="form-group mb-3">
                <label>Selecciona una habitación</label>
                <select name="BarcoHabitaciones[0].IdHabitacion" class="form-control">
                    @foreach (var habitacion in ViewBag.Habitaciones)
                    {
                     <option value="@habitacion.Id">@habitacion.Nombre</option>
                    }
                </select>
                <label>Cantidad disponible</label>
                <input type="number" name="BarcoHabitaciones[0].TotalHabitacionesDisponibles" placeholder="Cantidad disponible" class="form-control mt-2" />
                <button type="button" class="btn btn-danger mt-2" onclick="eliminarHabitacion(this)">Eliminar</button>
            </div>
        `;

        
        console.log("Enviando habitaciones:", habitacionesSeleccionadas);
        // Agrega el contenedor al div de habitaciones
        container.appendChild(div);
    }

    // Función para eliminar una habitación seleccionada
    function eliminarHabitacion(button) {
        button.closest(".habitacion-item").remove(); // Elimina el contenedor de la habitación
    }
     // Antes de enviar el formulario, convertimos las habitaciones en JSON
    document.querySelector("form").addEventListener("submit", function (e) {
        let habitaciones = [];
        let items = document.querySelectorAll(".habitacion-item");

        items.forEach(function (item) {
            let idHabitacion = item.querySelector("select").value;
            let total = item.querySelector("input[type='number']").value;

            habitaciones.push({
                IdHabitacion: parseInt(idHabitacion),
                TotalHabitacionesDisponibles: parseInt(total)
            });
        });

        document.getElementById("habitacionesJson").value = JSON.stringify(habitaciones);
    });
</script>

<script>
    let habitacionesSeleccionadas = []; 

    
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");
        form.addEventListener("submit", function () {
            const json = JSON.stringify(habitacionesSeleccionadas);
            document.getElementById("habitacionesJson").value = json;
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");
        form.addEventListener("submit", function () {
            let habitaciones = [];

            // Recorre cada .habitacion-item para obtener los datos
            document.querySelectorAll(".habitacion-item").forEach(item => {
                const idHabitacion = parseInt(item.querySelector('select').value);
                const cantidad = parseInt(item.querySelector('input[type="number"]').value);

                if (!isNaN(idHabitacion) && !isNaN(cantidad)) {
                    habitaciones.push({
                        IdHabitacion: idHabitacion,
                        TotalHabitacionesDisponibles: cantidad
                    });
                }
            });

            // Guardamos en el input hidden
            document.getElementById("habitacionesJson").value = JSON.stringify(habitaciones);
        });
    });
</script>

