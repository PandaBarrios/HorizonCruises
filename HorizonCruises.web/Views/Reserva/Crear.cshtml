@model HorizonCruises.web.ViewModels.ViewModelReserva

@{
    ViewData["Title"] = "Crear Reserva";
    var fechaCrucero = Model.Reserva.IdCruceroNavigation.FechaCrucero[0];
}

<h2 class="mb-4">@Model.Reserva.IdCruceroNavigation.Nombre</h2>

<!-- Detalles del crucero y cliente -->
<div class="row mb-4">
    <div class="col-md-6">
        <div class="card shadow-sm">
            <img src="@Url.Action("ObtenerImagen", "Crucero", new { id = @Model.Reserva.IdCruceroNavigation.Id })"
                 class="card-img-top" alt="Imagen del crucero" style="height: 300px; object-fit: cover;">
            <div class="card-body">
                <h5 class="card-title">Detalles del Crucero</h5>
                <p><i class="bi bi-geo-alt-fill"></i> <strong>Puerto de Salida:</strong> @Model.Reserva.IdCruceroNavigation.Itinerario.First().IdPuertoNavigation.Nombre</p>
                <p><i class="bi bi-geo-alt"></i> <strong>Puerto de Regreso:</strong> @Model.Reserva.IdCruceroNavigation.Itinerario.Last().IdPuertoNavigation.Nombre</p>
                <p><i class="bi bi-calendar-event"></i> <strong>Fecha Inicio:</strong> @fechaCrucero.FechaInicio.ToShortDateString()</p>
                <p><i class="bi bi-calendar-check"></i> <strong>Fecha Fin:</strong> @(fechaCrucero.FechaInicio.AddDays(Model.Reserva.IdCruceroNavigation.CantidadDias).ToShortDateString())</p>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Datos del Cliente</h5>
                <p><i class="bi bi-person-fill"></i> <strong>Nombre:</strong> @Model.Reserva.IdUsuarioNavigation.Nombre</p>
                <p><i class="bi bi-envelope-fill"></i> <strong>Correo:</strong> @Model.Reserva.IdUsuarioNavigation.CorreoElectronico</p>
                <p><i class="bi bi-calendar-heart"></i> <strong>Fecha de Reserva:</strong> @Model.Reserva.FechaReserva.ToShortDateString()</p>
            </div>
        </div>
    </div>
    <div class="card shadow-sm mt-3">
        <div class="card-body">
            <h5 class="card-title">Resumen de Costos</h5>
            <p><strong>Total General:</strong> <span id="total-general">₡0.00</span></p>
            <p><strong>IVA (13%):</strong> <span id="iva">₡0.00</span></p>
            <p><strong>Total con IVA:</strong> <span id="total-con-iva">₡0.00</span></p>
        </div>
    </div>

</div>

<form asp-action="Crear" method="post">
    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

    <h4 class="mb-3">Selecciona las habitaciones</h4>

    <div class="table-responsive mb-4">
        <table class="table table-hover table-striped align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Tipo</th>
                    <th>Capacidad</th>
                    <th>Descripción</th>
                    <th>Tamaño (m²)</th>
                    <th>Precio</th>
                    <th>Disponibles</th>
                    <th class="text-center">Acción</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var habitacion in Model.Habitaciones)
                {
                    var precios = habitacion.IdHabitacionNavigation.PrecioHabitacion;
                    var precioAplicable = precios.FirstOrDefault(p => p.IdCruceroFecha == fechaCrucero.Id);
                    <tr>
                        <td>@habitacion.IdHabitacionNavigation.Nombre</td>
                        <td>@habitacion.IdHabitacionNavigation.Tipo</td>
                        <td>@habitacion.IdHabitacionNavigation.CantidadMaximaHuespedes</td>
                        <td>@habitacion.IdHabitacionNavigation.Descripcion</td>
                        <td>@habitacion.IdHabitacionNavigation.Tamano</td>
                        <td>@(precioAplicable != null ? $"₡{precioAplicable.PrecioHabitacion1:N2}" : "N/D")</td>
                        <td>@habitacion.TotalHabitacionesDisponibles</td>
                        <td class="text-center">
                            <button type="button" class="btn btn-sm btn-outline-success"
                                    onclick="abrirModal('@habitacion.IdHabitacionNavigation.Id', @habitacion.TotalHabitacionesDisponibles)">
                                <i class="bi bi-plus-circle"></i> Agregar
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="modalCantidad" tabindex="-1" aria-labelledby="modalCantidadLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalCantidadLabel">Agregar habitación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="habitacion-id" />
                    <div class="mb-3">
                        <label for="cantidad" class="form-label">Cantidad de habitaciones</label>
                        <input type="number" class="form-control" id="cantidad" min="1" />
                        <div class="form-text text-danger d-none" id="error-cantidad">No puedes seleccionar más de las disponibles.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="confirmarAgregar()">Agregar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla habitaciones seleccionadas -->
    <h5 class="mt-4">Tus habitaciones seleccionadas:</h5>
    <table class="table table-bordered" id="tabla-seleccionadas">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Cantidad</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <div class="mt-3 text-end">
       @*  <h5>Total habitaciones: <span id="contador-habitaciones">0</span></h5> *@
        <h5>Total: <span id="total-habitaciones">₡0.00</span></h5>
    </div>


    <input type="hidden" name="HabitacionesSeleccionadas" id="habitacionesJson" />

    <!-- Huespedes -->
    <h4 class="mb-3">Selecciona tus acompañantes</h4>

    <div class="table-responsive mb-4">
        <table class="table table-hover table-striped align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Fecha de nacimiento</th>
                    <th>Correo</th>
                    <th>Pasaporte</th>
                    <th>Genero</th>
                    <th class="text-center">Acción</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var huesped in Model.Huespedes)
                {
                     <tr>
                        <td>@huesped.IdHuespedNavigation.Nombre @huesped.IdHuespedNavigation.Apellido </td>
                        <td>@huesped.IdHuespedNavigation.FechaNacimiento</td>
                        <td>@huesped.IdHuespedNavigation.Correo</td>
                        <td>@huesped.IdHuespedNavigation.Pasaporte</td>
                        <td>
                            @(huesped.IdHuespedNavigation?.Genero == true ? "Masculino" : "Femenino")
                        </td>
                        <td class="text-center">
                            <button type="button" class="btn btn-sm btn-outline-success"
                                    onclick="agregarHuesped('@huesped.IdHuesped', '@huesped.IdHuespedNavigation.Nombre @huesped.IdHuespedNavigation.Apellido', '@huesped.IdHuespedNavigation.Correo')">
                                <i class="bi bi-plus-circle"></i> Agregar
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <h5 class="mt-4">Tus acompañantes seleccionados:</h5>
    <table class="table table-bordered" id="tabla-huespedes-seleccionados">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Correo</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <input type="hidden" name="HuespedesSeleccionados" id="huespedesJson" />

    <!-- Complementos -->
    <h4 class="mb-3">Opciones para complementar su estadia</h4>

    <div class="table-responsive mb-4">
        <table class="table table-hover table-striped align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Descripcion</th>
                    <th>Precio</th>
                    <th>Aplica a:</th>
                    <th class="text-center">Acción</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var complemento in Model.Complementos)
                {
                    <tr>
                        <td>@complemento.Nombre </td>
                        <td>@complemento.Descripcion</td>
                        <td>@complemento.Precio.ToString("C")</td>
                        <td>
                            @(complemento?.AplicadoA == true ? "Huespedes" : "Cuartos")
                        </td>
                        <td class="text-center">
                            <button type="button" class="btn btn-sm btn-outline-success"
                                    onclick="agregarComplemento('@complemento.Nombre', '@complemento.Descripcion', '@(complemento?.AplicadoA == true ? "Huespedes" : "Cuartos")', @complemento.Precio)">
                                <i class="bi bi-plus-circle"></i> Agregar
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <h5 class="mt-4">Complementos seleccionados:</h5>
    <table class="table table-bordered" id="tabla-complementos-seleccionados">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Aplica a</th>
                <th>Precio</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <div class="text-end mt-2">
        <h5>Total huéspedes: <span id="contador-huespedes">0</span></h5>
        <h5>Total habitaciones: <span id="contador-habitaciones">0</span></h5>
        <h5>Total complementos por huéspedes: <span id="total-complementos-huespedes">₡0.00</span></h5>
        <h5>Total complementos por habitaciones: <span id="total-complementos-habitaciones">₡0.00</span></h5>
        <h5>Total complementos: <span id="total-complementos">₡0.00</span></h5>
    </div>

    <input type="hidden" name="ComplementosSeleccionados" id="complementosJson" />


    <div class="form-group mb-4">
        <input type="submit" value="Confirmar Reserva" class="btn btn-primary btn-lg" />
        <a asp-action="Index" class="btn btn-secondary ms-2">Cancelar</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let habitacionesSeleccionadas = [];
        const disponibilidadPorHabitacion = {
        @foreach (var h in Model.Habitaciones)
        {
            <text>"@h.IdHabitacionNavigation.Id": @h.TotalHabitacionesDisponibles,</text>
        }
        };

        function abrirModal(idHabitacion, disponibles, editar = false) {
            document.getElementById('habitacion-id').value = idHabitacion;
            const cantidadInput = document.getElementById('cantidad');
            const existente = habitacionesSeleccionadas.find(h => h.id === idHabitacion);

            cantidadInput.value = editar && existente ? existente.cantidad : 1;
            cantidadInput.max = disponibles;
            cantidadInput.setAttribute("data-editando", editar);

            document.getElementById('error-cantidad').classList.add('d-none');
            new bootstrap.Modal(document.getElementById('modalCantidad')).show();
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }

        function confirmarAgregar() {
            const id = document.getElementById('habitacion-id').value;
            const cantidad = parseInt(document.getElementById('cantidad').value);
            const max = parseInt(document.getElementById('cantidad').max);
            const editando = document.getElementById('cantidad').getAttribute("data-editando") === "true";
            const nombre = document.querySelector(`button[onclick*="abrirModal('${id}'"]`)
                           ?.closest("tr")?.children[0]?.textContent?.trim() ?? "Desconocido";

            if (cantidad > max || cantidad < 1) {
                document.getElementById('error-cantidad').classList.remove('d-none');
                return;
            }

            if (editando) {
                const index = habitacionesSeleccionadas.findIndex(h => h.id === id);
                if (index >= 0) habitacionesSeleccionadas[index].cantidad = cantidad;
            } else {
                const yaExiste = habitacionesSeleccionadas.find(h => h.id === id);
                if (yaExiste) {
                     yaExiste.cantidad += cantidad;
                } else {
                    const fila = document.querySelector(`button[onclick*="abrirModal('${id}'"]`)?.closest("tr");
                    const precioTexto = fila?.children[5]?.textContent?.replace(/[₡]/g,'').trim() ?? "0";
                    const precioUnitario = parseFloat(precioTexto) || 0;


                    console.log(`Habitación ID: ${id}, Precio leído: ${precioTexto}`);

                    habitacionesSeleccionadas.push({ id, nombre, cantidad, precioUnitario });
                }       

            }

            actualizarVistaSeleccionadas();
            bootstrap.Modal.getInstance(document.getElementById('modalCantidad')).hide();
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }

        function actualizarVistaSeleccionadas() {
            const tabla = document.querySelector('#tabla-seleccionadas tbody');
            tabla.innerHTML = '';

            habitacionesSeleccionadas.forEach(h => {
                const fila = document.createElement('tr');
                fila.innerHTML = `
                    <td>${h.id}</td>
                    <td>${h.nombre}</td>
                    <td>${h.cantidad}</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-sm btn-primary me-1" onclick="editarHabitacion('${h.id}')">Editar</button>
                        <button type="button" class="btn btn-sm btn-danger" onclick="eliminarHabitacion('${h.id}')">Eliminar</button>
                    </td>
                `;
                tabla.appendChild(fila);
            });

            document.getElementById('habitacionesJson').value = JSON.stringify(habitacionesSeleccionadas);
            actualizarTotal();
            actualizarContador();
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }



        function eliminarHabitacion(id) {
            habitacionesSeleccionadas = habitacionesSeleccionadas.filter(h => h.id !== id);
            actualizarVistaSeleccionadas();
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }

        function editarHabitacion(id) {
            const disponibles = disponibilidadPorHabitacion[id] || 10;
            abrirModal(id, disponibles, true);
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }

        function actualizarTotal() {
            let total = 0;
            habitacionesSeleccionadas.forEach(h => {
                total += h.precioUnitario * h.cantidad;
            });

            document.getElementById('total-habitaciones').textContent = `₡${total.toLocaleString('es-CR', { minimumFractionDigits: 2 })}`;
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }

        function actualizarContador() {
            const totalHabitaciones = habitacionesSeleccionadas.reduce((sum, h) => sum + h.cantidad, 0);
            document.getElementById('contador-habitaciones').textContent = totalHabitaciones;
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }


    </script>

    <script>
        let huespedesSeleccionados = [];

        function agregarHuesped(id, nombre, correo) {
          const yaExiste = huespedesSeleccionados.find(h => h.id === id);
            if (yaExiste) return; // evitar duplicados

            huespedesSeleccionados.push({ id, nombre, correo });
            actualizarVistaHuespedes();
            actualizarResumenFinal();
        }

        function eliminarHuesped(id) {
            huespedesSeleccionados = huespedesSeleccionados.filter(h => h.id !== id);
            actualizarVistaHuespedes();
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }

        function actualizarVistaHuespedes() {
            const tabla = document.querySelector('#tabla-huespedes-seleccionados tbody');
            tabla.innerHTML = '';

            huespedesSeleccionados.forEach(h => {
                const fila = document.createElement('tr');
                fila.innerHTML = `
                    <td>${h.nombre}</td>
                    <td>${h.correo}</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-sm btn-danger" onclick="eliminarHuesped('${h.id}')">Eliminar</button>
                    </td>
                `;
                tabla.appendChild(fila);
            });

            document.getElementById('huespedesJson').value = JSON.stringify(huespedesSeleccionados);
            actualizarContadorHuespedes();
            actualizarResumenFinal();
        }

        function actualizarContadorHuespedes() {
            document.getElementById('contador-huespedes').textContent = huespedesSeleccionados.length;
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }


    </script>

    <script>
        let complementosSeleccionados = [];

        function agregarComplemento(nombre, descripcion, aplicaA, precio) {
            const yaExiste = complementosSeleccionados.find(c => c.nombre === nombre);
            if (yaExiste) return;

            complementosSeleccionados.push({ nombre, descripcion, aplicaA, precio });
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }

        function eliminarComplemento(nombre) {
            complementosSeleccionados = complementosSeleccionados.filter(c => c.nombre !== nombre);
            actualizarVistaComplementos();
            actualizarResumenFinal();
        }

        function actualizarVistaComplementos() {
            const tabla = document.querySelector('#tabla-complementos-seleccionados tbody');
            tabla.innerHTML = '';

            let totalHuespedes = 0;
            let totalHabitaciones = 0;

            const cantidadHuespedes = huespedesSeleccionados.length;
            const cantidadHabitaciones = habitacionesSeleccionadas.reduce((sum, h) => sum + h.cantidad, 0);

            complementosSeleccionados.forEach(c => {
                let subtotal = 0;

                if (c.aplicaA === "Huespedes") {
                    subtotal = c.precio * cantidadHuespedes;
                    totalHuespedes += subtotal;
                } else {
                    subtotal = c.precio * cantidadHabitaciones;
                    totalHabitaciones += subtotal;
                }

                const fila = document.createElement('tr');
                fila.innerHTML = `
                    <td>${c.nombre}</td>
                    <td>${c.descripcion}</td>
                    <td>${c.aplicaA}</td>
                    <td>₡${c.precio.toLocaleString('es-CR', { minimumFractionDigits: 2 })}</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-sm btn-danger" onclick="eliminarComplemento('${c.nombre}')">Eliminar</button>
                    </td>
                `;
                tabla.appendChild(fila);
            });

            const totalGeneral = totalHuespedes + totalHabitaciones;

            document.getElementById('total-complementos-huespedes').textContent = `₡${totalHuespedes.toLocaleString('es-CR', { minimumFractionDigits: 2 })}`;
            document.getElementById('total-complementos-habitaciones').textContent = `₡${totalHabitaciones.toLocaleString('es-CR', { minimumFractionDigits: 2 })}`;
            document.getElementById('total-complementos').textContent = `₡${totalGeneral.toLocaleString('es-CR', { minimumFractionDigits: 2 })}`;
            document.getElementById('complementosJson').value = JSON.stringify(complementosSeleccionados);

            actualizarResumenFinal();
        }

    </script>

    <script>
        function actualizarResumenFinal() {
            // Total habitaciones
            const totalHabitaciones = habitacionesSeleccionadas.reduce((sum, h) => sum + (h.precioUnitario * h.cantidad), 0);

            // Total complementos
            const cantidadHuespedes = huespedesSeleccionados.length;
            const cantidadHabitaciones = habitacionesSeleccionadas.reduce((sum, h) => sum + h.cantidad, 0);

            let totalComplementos = 0;

            complementosSeleccionados.forEach(c => {
                if (c.aplicaA === "Huespedes") {
                    totalComplementos += c.precio * cantidadHuespedes;
                } else {
                    totalComplementos += c.precio * cantidadHabitaciones;
                }
            });

            // Cálculos
            const totalGeneral = totalHabitaciones + totalComplementos;
            const iva = totalGeneral * 0.13;
            const totalConIva = totalGeneral + iva;

            // Mostrar
            document.getElementById('total-general').textContent = `₡${totalGeneral.toLocaleString('es-CR', { minimumFractionDigits: 2 })}`;
            document.getElementById('iva').textContent = `₡${iva.toLocaleString('es-CR', { minimumFractionDigits: 2 })}`;
            document.getElementById('total-con-iva').textContent = `₡${totalConIva.toLocaleString('es-CR', { minimumFractionDigits: 2 })}`;
        }

    </script>
}

